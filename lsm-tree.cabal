cabal-version:      3.4
name:               lsm-tree
version:            0.1.0.0
synopsis:           Log-structured merge-tree
description:        Log-structured merge-tree.
license:            Apache-2.0
license-file:       LICENSE
author:             Duncan Coutts, Joris Dral, Matthias Heinzel
maintainer:         Duncan Coutts, Joris Dral, Matthias Heinzel
copyright:          2023 Input Output Global Inc (IOG), INTERSECT 2023-2024
category:           Database
build-type:         Simple
extra-doc-files:    CHANGELOG.md
extra-source-files: README.md
tested-with:        GHC ==9.2 || ==9.4 || ==9.6 || ==9.8

source-repository head
  type:     git
  location: https://github.com/IntersectMBO/lsm-tree

common warnings
  ghc-options:
    -Wall -Wcompat -Wincomplete-uni-patterns
    -Wincomplete-record-updates -Wpartial-fields -Widentities
    -Wredundant-constraints -Wmissing-export-lists
    -Wno-unticked-promoted-constructors -Wunused-packages

common wno-x-partial
  if impl(ghc >=9.8)
    -- No errors for x-partial functions. We might remove this in the future if
    -- we decide to refactor code that uses partial functions.
    ghc-options: -Wno-x-partial

common language
  default-language:   GHC2021
  default-extensions:
    GADTs
    RoleAnnotations
    ViewPatterns

library
  import:          language, warnings, wno-x-partial
  hs-source-dirs:  src
  exposed-modules:
    Data.Arena
    Data.Map.Range
    Database.LSMTree.Common
    Database.LSMTree.Internal
    Database.LSMTree.Internal.Assertions
    Database.LSMTree.Internal.BitMath
    Database.LSMTree.Internal.BlobRef
    Database.LSMTree.Internal.BloomFilter
    Database.LSMTree.Internal.ByteString
    Database.LSMTree.Internal.CRC32C
    Database.LSMTree.Internal.Entry
    Database.LSMTree.Internal.IndexCompact
    Database.LSMTree.Internal.IndexCompactAcc
    Database.LSMTree.Internal.Lookup
    Database.LSMTree.Internal.Managed
    Database.LSMTree.Internal.Merge
    Database.LSMTree.Internal.Monkey
    Database.LSMTree.Internal.Monoidal
    Database.LSMTree.Internal.Normal
    Database.LSMTree.Internal.PageAcc
    Database.LSMTree.Internal.PageAcc1
    Database.LSMTree.Internal.Paths
    Database.LSMTree.Internal.Primitive
    Database.LSMTree.Internal.Range
    Database.LSMTree.Internal.RawBytes
    Database.LSMTree.Internal.RawOverflowPage
    Database.LSMTree.Internal.RawPage
    Database.LSMTree.Internal.Run
    Database.LSMTree.Internal.RunAcc
    Database.LSMTree.Internal.RunBuilder
    Database.LSMTree.Internal.RunReader
    Database.LSMTree.Internal.RunReaders
    Database.LSMTree.Internal.Serialise
    Database.LSMTree.Internal.Serialise.Class
    Database.LSMTree.Internal.TempRegistry
    Database.LSMTree.Internal.Unsliced
    Database.LSMTree.Internal.Vector
    Database.LSMTree.Internal.WriteBuffer
    Database.LSMTree.Monoidal
    Database.LSMTree.Normal

  build-depends:
    , base                     >=4.16      && <4.20
    , bitvec                   ^>=1.1
    , bytestring               ^>=0.11.4.0 || ^>=0.12.1.0
    , concurrent-extra         ^>=0.7
    , containers
    , crc32c                   ^>=0.2.1
    , deepseq                  ^>=1.4      || ^>=1.5
    , filepath
    , fs-api                   ^>=0.2
    , io-classes               ^>=1.4
    , lsm-tree:bloomfilter
    , lsm-tree:fs-api-blockio
    , lsm-tree:kmerge
    , nothunks                 ^>=0.2
    , primitive                ^>=0.9
    , strict-mvar              ^>=1.4
    , vector                   ^>=0.13
    , vector-algorithms        ^>=0.9

-- this exists due windows
library xxhash
  import:          language
  visibility:      private
  include-dirs:    xxhash/xxHash-0.8.2/ xxhash/include/
  includes:
    HsXXHash.h
    xxhash.h

  exposed-modules: XXH3

  if (arch(x86_64) && !os(osx))
    -- Cabal doesn't pass cc-options to "ordinary" Haskell source compilation
    -- https://github.com/haskell/cabal/issues/9801
    ghc-options: -optc=-mavx2 -optc=-O3

  other-modules:   FFI
  hs-source-dirs:  xxhash/src
  build-depends:
    , base
    , bytestring
    , primitive   ^>=0.9

test-suite xxhash-tests
  import:         language
  type:           exitcode-stdio-1.0
  hs-source-dirs: xxhash/tests
  main-is:        xxhash-tests.hs
  build-depends:
    , base
    , bytestring
    , lsm-tree:xxhash
    , primitive
    , tasty
    , tasty-hunit
    , tasty-quickcheck

-- this fork doesn't work on 32bit systems
library bloomfilter
  import:          language
  visibility:      private
  hs-source-dirs:  bloomfilter/src
  build-depends:
    , base             >=4.5       && <5
    , bitvec           ^>=1.1.5.0
    , bytestring       >=0.9
    , data-array-byte
    , deepseq
    , lsm-tree:xxhash
    , primitive
    , vector           ^>=0.13.0.0

  exposed-modules:
    Data.BloomFilter
    Data.BloomFilter.BitVec64
    Data.BloomFilter.Calc
    Data.BloomFilter.Easy
    Data.BloomFilter.Hash
    Data.BloomFilter.Internal
    Data.BloomFilter.Mutable
    Data.BloomFilter.Mutable.Internal

  ghc-options:     -O2 -Wall

test-suite bloomfilter-tests
  import:         language
  type:           exitcode-stdio-1.0
  hs-source-dirs: bloomfilter/tests
  main-is:        bloomfilter-tests.hs
  other-modules:  QCSupport
  build-depends:
    , base
    , bytestring
    , lsm-tree:bloomfilter
    , QuickCheck
    , quickcheck-instances
    , random
    , tasty
    , tasty-quickcheck
    , vector

test-suite bloomfilter-primes
  import:         language
  type:           exitcode-stdio-1.0
  hs-source-dirs: bloomfilter/tests
  main-is:        primes.hs
  build-depends:
    , base
    , primes  ^>=0.2.1.0

test-suite bloomfilter-spell
  import:         language
  type:           exitcode-stdio-1.0
  hs-source-dirs: bloomfilter/examples
  main-is:        spell.hs
  build-depends:
    , base
    , lsm-tree:bloomfilter

test-suite lsm-tree-test
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: test src-extras
  main-is:        Main.hs
  other-modules:
    Database.LSMTree.Class.Monoidal
    Database.LSMTree.Class.Normal
    Database.LSMTree.Extras
    Database.LSMTree.Extras.Generators
    Database.LSMTree.Extras.Orphans
    Database.LSMTree.Extras.Random
    Database.LSMTree.Extras.ReferenceImpl
    Database.LSMTree.Extras.UTxO
    Database.LSMTree.Model.Monoidal
    Database.LSMTree.Model.Normal
    Database.LSMTree.Model.Normal.Session
    Database.LSMTree.ModelIO.Monoidal
    Database.LSMTree.ModelIO.Normal
    Database.LSMTree.ModelIO.Session
    Test.Data.Arena
    Test.Database.LSMTree.Class.Monoidal
    Test.Database.LSMTree.Class.Normal
    Test.Database.LSMTree.Generators
    Test.Database.LSMTree.Internal
    Test.Database.LSMTree.Internal.BloomFilter
    Test.Database.LSMTree.Internal.CRC32C
    Test.Database.LSMTree.Internal.Entry
    Test.Database.LSMTree.Internal.IndexCompact
    Test.Database.LSMTree.Internal.Lookup
    Test.Database.LSMTree.Internal.Merge
    Test.Database.LSMTree.Internal.Monkey
    Test.Database.LSMTree.Internal.PageAcc
    Test.Database.LSMTree.Internal.PageAcc1
    Test.Database.LSMTree.Internal.RawOverflowPage
    Test.Database.LSMTree.Internal.RawPage
    Test.Database.LSMTree.Internal.Run
    Test.Database.LSMTree.Internal.RunAcc
    Test.Database.LSMTree.Internal.RunBuilder
    Test.Database.LSMTree.Internal.Serialise
    Test.Database.LSMTree.Internal.Serialise.Class
    Test.Database.LSMTree.Model.Monoidal
    Test.Database.LSMTree.Model.Normal
    Test.Database.LSMTree.Normal.StateMachine
    Test.Database.LSMTree.Normal.StateMachine.Op
    Test.System.Posix.Fcntl.NoCache
    Test.Util.FS
    Test.Util.Orphans
    Test.Util.QuickCheck
    Test.Util.RawPage
    Test.Util.TypeFamilyWrappers

  build-depends:
    , ansi-terminal
    , base
    , bitvec
    , bytestring
    , constraints
    , containers
    , crc32c
    , cryptohash-sha256
    , deepseq
    , directory
    , filepath
    , fs-api
    , fs-sim                   >=0.2
    , io-classes
    , io-sim                   >=1.4
    , lsm-tree
    , lsm-tree:bloomfilter
    , lsm-tree:fs-api-blockio
    , lsm-tree:prototypes
    , mtl
    , primitive
    , QuickCheck
    , quickcheck-classes-base
    , quickcheck-dynamic
    , quickcheck-instances
    , quickcheck-lockstep
    , random
    , semialign
    , split
    , stm
    , strict-mvar
    , tasty
    , tasty-hunit
    , tasty-quickcheck
    , temporary
    , these
    , transformers
    , vector
    , vector-algorithms
    , wide-word

  if !os(windows)
    build-depends: lsm-tree:fcntl-nocache

  ghc-options:    -fno-ignore-asserts -threaded

benchmark lsm-tree-micro-bench
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: bench/micro src-extras
  main-is:        Main.hs
  other-modules:
    Bench.Database.LSMTree.Internal.BloomFilter
    Bench.Database.LSMTree.Internal.IndexCompact
    Bench.Database.LSMTree.Internal.Lookup
    Bench.Database.LSMTree.Internal.Merge
    Bench.Database.LSMTree.Internal.RawPage
    Bench.Database.LSMTree.Internal.WriteBuffer
    Database.LSMTree.Extras
    Database.LSMTree.Extras.Generators
    Database.LSMTree.Extras.Orphans
    Database.LSMTree.Extras.Random
    Database.LSMTree.Extras.ReferenceImpl
    Database.LSMTree.Extras.UTxO

  build-depends:
    , base
    , bytestring
    , containers
    , criterion
    , deepseq
    , directory
    , fs-api
    , lsm-tree
    , lsm-tree:bloomfilter
    , lsm-tree:fs-api-blockio
    , lsm-tree:prototypes
    , primitive
    , QuickCheck
    , quickcheck-instances
    , random
    , temporary
    , vector
    , wide-word

  ghc-options:    -rtsopts -with-rtsopts=-T -threaded

benchmark lsm-tree-bench-bloomfilter
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: bench/macro src-extras
  main-is:        lsm-tree-bench-bloomfilter.hs
  other-modules:
    Database.LSMTree.Extras.Orphans
    Database.LSMTree.Extras.UTxO

  build-depends:
    , base
    , bytestring
    , deepseq
    , fs-api
    , lsm-tree
    , lsm-tree:bloomfilter
    , primitive
    , QuickCheck
    , random
    , time
    , vector
    , wide-word

  ghc-options:    -rtsopts -with-rtsopts=-T -threaded

benchmark lsm-tree-bench-lookups
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: bench/macro src-extras
  main-is:        lsm-tree-bench-lookups.hs
  other-modules:
    Database.LSMTree.Extras.Orphans
    Database.LSMTree.Extras.UTxO

  build-depends:
    , base
    , bytestring
    , deepseq
    , fs-api
    , io-classes
    , lsm-tree
    , lsm-tree:bloomfilter
    , lsm-tree:fs-api-blockio
    , primitive
    , QuickCheck
    , random
    , temporary
    , time
    , vector
    , vector-algorithms
    , wide-word

  ghc-options:    -rtsopts -with-rtsopts=-T -threaded

library mcg
  import:          language, warnings, wno-x-partial
  hs-source-dirs:  src-mcg
  exposed-modules: MCG
  build-depends:
    , base
    , primes

benchmark lsm-tree-bench-wp8
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: bench/macro src-extras
  main-is:        lsm-tree-bench-wp8.hs
  build-depends:
    , base
    , binary
    , bytestring
    , clock
    , containers
    , cryptohash-sha256
    , deepseq
    , fs-api
    , lsm-tree
    , lsm-tree:fs-api-blockio
    , lsm-tree:mcg
    , optparse-applicative
    , vector

  ghc-options:    -rtsopts -with-rtsopts=-T -threaded

flag rocksdb
  description: Build components that rely on RocksDB (only on Linux)
  default:     True
  manual:      False

benchmark rocksdb-bench-wp8
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: bench/macro src-extras
  main-is:        rocksdb-bench-wp8.hs

  if !(os(linux) && flag(rocksdb))
    buildable: False

  build-depends:
    , base
    , binary
    , bytestring
    , clock
    , containers
    , cryptohash-sha256
    , deepseq
    , directory
    , lsm-tree:mcg
    , lsm-tree:rocksdb
    , optparse-applicative
    , split

  ghc-options:    -rtsopts -with-rtsopts=-T -threaded

library rocksdb
  import:          language, warnings
  hs-source-dirs:  src-rocksdb
  exposed-modules: RocksDB
  other-modules:   RocksDB.FFI

  if !(os(linux) && flag(rocksdb))
    buildable: False

  -- Ubuntu 22.04 doesn't have pkgconfig files for rocksdb
  extra-libraries: rocksdb
  build-depends:
    , base
    , bytestring
    , indexed-traversable

library kmerge
  import:          language, warnings, wno-x-partial
  hs-source-dirs:  src-kmerge
  exposed-modules:
    KMerge.Heap
    KMerge.LoserTree

  build-depends:
    , base
    , indexed-traversable
    , primitive

test-suite kmerge-test
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: test
  main-is:        kmerge-test.hs
  build-depends:
    , base              >=4.16 && <4.20
    , deepseq
    , heaps
    , lsm-tree:kmerge
    , primitive
    , splitmix
    , tasty
    , tasty-bench
    , tasty-hunit
    , tasty-quickcheck
    , vector

benchmark kmerge-bench
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: test
  main-is:        kmerge-test.hs
  cpp-options:    -DKMERGE_BENCHMARKS
  build-depends:
    , base              >=4.16 && <4.20
    , deepseq
    , heaps
    , lsm-tree:kmerge
    , primitive
    , splitmix
    , tasty
    , tasty-bench
    , tasty-hunit
    , tasty-quickcheck
    , vector

test-suite map-range-test
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: test
  main-is:        map-range-test.hs
  build-depends:
    , base              >=4.16 && <4.20
    , bytestring
    , containers
    , lsm-tree
    , QuickCheck
    , tasty
    , tasty-hunit
    , tasty-quickcheck

library prototypes
  import:          language, warnings, wno-x-partial
  hs-source-dirs:  prototypes
  exposed-modules:
    FormatPage
    ScheduledMerges
    ScheduledMergesTestQLS

  build-depends:
    , base
    , binary
    , bytestring
    , constraints
    , containers
    , contra-tracer
    , lsm-tree
    , QuickCheck
    , quickcheck-dynamic
    , quickcheck-lockstep
    , tasty
    , tasty-quickcheck

  ghc-options:
    -Wno-incomplete-uni-patterns -Wno-partial-fields
    -Wno-missing-export-lists

test-suite lsm-prototypes-tests
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: test
  main-is:        lsm-prototypes-tests.hs
  build-depends:
    , base
    , lsm-tree:prototypes
    , tasty

-- TODO: temporary flag that overrides the operating system dependents
-- implementation of the HasBlockIO interface, using the serial implementation
-- intead. This allows for fixing bugs in the blockio-uring implementation
-- without blocking parallel development efforts that rely on HasBlockIO but not
-- on its exact implementation. One could argue for keeping this flag even after
-- blockio-uring has become stable enough, but I (Joris) would prefer to not
-- expose cabal flags to the user.
flag serialblockio
  description: User serial HasBlockIO regardless of the operating system
  default:     False
  manual:      True

library fs-api-blockio
  import:          language, warnings, wno-x-partial
  visibility:      private
  hs-source-dirs:  fs-api-blockio/src
  exposed-modules:
    System.FS.BlockIO.API
    System.FS.BlockIO.IO
    System.FS.BlockIO.Serial

  build-depends:
    , base        >=4.16  && <4.20
    , deepseq     ^>=1.4  || ^>=1.5
    , fs-api      ^>=0.2
    , io-classes  ^>=1.4
    , primitive   ^>=0.9
    , vector      ^>=0.13

  if os(linux)
    hs-source-dirs: fs-api-blockio/src-linux
    other-modules:  System.FS.BlockIO.Internal

    if !flag(serialblockio)
      other-modules: System.FS.BlockIO.Async
      build-depends: blockio-uring ^>=0.1

  elif os(osx)
    hs-source-dirs: fs-api-blockio/src-macos
    other-modules:  System.FS.BlockIO.Internal

  elif os(windows)
    hs-source-dirs: fs-api-blockio/src-windows
    other-modules:  System.FS.BlockIO.Internal

  if flag(serialblockio)
    cpp-options: -DSERIALBLOCKIO

test-suite fs-api-blockio-test
  import:         language, warnings, wno-x-partial
  type:           exitcode-stdio-1.0
  hs-source-dirs: fs-api-blockio/test
  main-is:        Main.hs
  build-depends:
    , async
    , base                     >=4.16 && <4.20
    , bytestring
    , fs-api
    , lsm-tree:fs-api-blockio
    , primitive
    , tasty
    , tasty-hunit
    , tasty-quickcheck
    , temporary
    , vector

  ghc-options:    -threaded -fno-ignore-asserts

library fcntl-nocache
  import:         language, warnings
  visibility:     private
  hs-source-dirs: src-fcntl-nocache

  if !os(windows)
    exposed-modules:    System.Posix.Fcntl.NoCache
    build-depends:      base <5
    build-tool-depends: hsc2hs:hsc2hs
