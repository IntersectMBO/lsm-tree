name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true


permissions:
  contents: read

jobs:
  # Build and test
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.2.8", "9.4.8", "9.6.4", "9.8.2"]
        cabal: ["3.10.2.1"]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        exclude:
          - ghc: "9.4.8"
            os: windows-latest
          - ghc: "9.4.8"
            os: macOS-latest
          - ghc: "9.8.2"
            os: windows-latest
          - ghc: "9.8.2"
            os: macOS-latest

    steps:
    - name: CPU info (macOS)
      if: matrix.os == 'macOS-latest'
      run: sysctl -a machdep.cpu

    - name: CPU info (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: cat /proc/cpuinfo

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-update: true

    - name: Install liburing (on Linux)
      id: setup-liburing
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install liburing-dev

    - name: Configure the build
      run: |
        cabal configure --enable-tests --enable-benchmark --ghc-options="-Werror" --ghc-options="-fno-ignore-asserts"
        cat cabal.project.local

    - name: Record cabal dependencies
      id: record-deps
      run: |
        cabal build all --dry-run

    - name: "Restore cache"
      uses: actions/cache/restore@v4
      id: restore-cabal-cache
      env:
        cache-name: cache-cabal-build
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-

    - name: Install cabal dependencies
      id: build-dependencies
      run: cabal build --only-dependencies --enable-tests --enable-benchmarks all

    - name: "Save cache"
      uses: actions/cache/save@v4
      id: save-cabal-cache
      # Note: cache-hit will be set to true only when cache hit occurs for the
      # exact key match. For a partial key match via restore-keys or a cache
      # miss, it will be set to false.
      if: steps.build-dependencies.outcome == 'success' && steps.restore-cabal-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key:  ${{ steps.restore-cabal-cache.outputs.cache-primary-key }}

    - name: Build
      run: cabal build all

    - name: Run tests
      run: cabal test -j1 --test-show-details=direct all

  # Check formatting for Haskell files
  stylish-haskell:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.6.4"]
        cabal: ["3.10.2.1"]
        os: [ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install system dependencies (apt-get)
      run: |
        sudo apt-get update
        sudo apt-get -y install fd-find

    - name: Setup Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-update: false

    - name: Cabal update
      run: cabal update

    - name: Setup cabal bin path
      run: echo "$HOME/.cabal/bin" >> $GITHUB_PATH

    - name: Cache cabal store
      uses: actions/cache@v3
      env:
        cache-name: cache-cabal-stylish
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}

    - name: Install stylish-haskell
      run: cabal install --ignore-project stylish-haskell --constraint 'stylish-haskell == 0.14.6.0'

    - name: Record stylish-haskell version
      run: |
        which stylish-haskell
        stylish-haskell --version

    - name: Run stylish-haskell
      run: |
        ./scripts/format-stylish.sh -p . -d
        git diff --exit-code

  # Check formatting for cabal files
  cabal-fmt:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.6.4"]
        cabal: ["3.10.2.1"]
        os: [ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install system dependencies (apt-get)
      run: |
        sudo apt-get update
        sudo apt-get -y install fd-find

    - name: Setup Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-update: false

    - name: Cabal update
      run: cabal update

    - name: Setup cabal bin path
      run: echo "$HOME/.cabal/bin" >> $GITHUB_PATH

    - name: Cache cabal store
      uses: actions/cache@v3
      env:
        cache-name: cache-cabal-cabal-fmt-11
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}

    - name: Install cabal-fmt
      run: cabal install --ignore-project cabal-fmt --constraint 'cabal-fmt == 0.1.11'

    - name: Record cabal-fmt version
      run: |
        which cabal-fmt
        cabal-fmt --version

    - name: Run cabal-fmt
      run: |
        ./scripts/format-cabal.sh
        git diff --exit-code

  # Check cabal files
  cabal-check:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.6.4"]
        cabal: ["3.10.2.1"]
        os: [ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-update: false

    - name: Cabal update
      run: cabal update

    - name: Run cabal check
      run: |
        ./scripts/check-cabal.sh
