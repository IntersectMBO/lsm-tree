#!/usr/bin/env cabal
{- cabal:
build-depends:
    , base
    , bytestring
    , Cabal-syntax
    , pandoc
    , text
-}
{-# LANGUAGE LambdaCase #-}

module Main (main) where

import qualified Data.ByteString as BS
import Data.Text (Text)
import qualified Data.Text as T
import qualified Data.Text.IO as TIO
import Distribution.PackageDescription.Parsec (parseGenericPackageDescriptionMaybe)
import qualified Distribution.Types.GenericPackageDescription as GenericPackageDescription
import qualified Distribution.Types.PackageDescription as PackageDescription
import Distribution.Utils.ShortText (fromShortText)
import System.IO (hPutStrLn, stderr)
import Text.Pandoc (runIOorExplode)
import Text.Pandoc.Extensions (githubMarkdownExtensions)
import Text.Pandoc.Options (ReaderOptions (..), WriterOptions (..), def)
import Text.Pandoc.Readers (readHaddock)
import Text.Pandoc.Transforms (headerShift)
import Text.Pandoc.Writers (writeMarkdown)

header :: Text
header =
    T.unlines . fmap T.pack $
        [ "<!-- WARNING: Do not edit this file. This file is generated by `scripts/build-readme.hs`. -->"
        , ""
        , "# lsm-tree"
        , ""
        , "[![handbook](https://img.shields.io/badge/policy-Cardano%20Engineering%20Handbook-informational)](https://input-output-hk.github.io/cardano-engineering-handbook)"
        , "[![Haskell CI](https://img.shields.io/github/actions/workflow/status/IntersectMBO/lsm-tree/haskell.yml?label=Build)](https://github.com/IntersectMBO/lsm-tree/actions/workflows/haskell.yml)"
        , "[![Documentation CI](https://img.shields.io/github/actions/workflow/status/IntersectMBO/lsm-tree/documentation.yml?label=Documentation%20build)](https://github.com/IntersectMBO/lsm-tree/actions/workflows/documentation.yml)"
        , "[![Haddocks](https://img.shields.io/badge/documentation-Haddocks-purple)](https://IntersectMBO.github.io/lsm-tree/)"
        , ""
        , "> :warning: **This library is in active development**: there is currently no release schedule!"
        , ""
        , "This package is developed by Well-Typed LLP on behalf of Input Output Global, Inc. (IOG) and INTERSECT."
        , "The main contributors are Duncan Coutts, Joris Dral, Matthias Heinzel, Wolfgang Jeltsch, Wen Kokke, and Alex Washburn."
        , ""
        , "## Description"
        ]

main :: IO ()
main = do
    let lsmTreeCabalFile = "lsm-tree.cabal"
    lsmTreeCabalContent <- BS.readFile lsmTreeCabalFile
    case parseGenericPackageDescriptionMaybe lsmTreeCabalContent of
        Nothing -> hPutStrLn stderr $ "error: Could not parse '" <> lsmTreeCabalFile <> "'"
        Just genericPackageDescription -> do
            let packageDescription = GenericPackageDescription.packageDescription genericPackageDescription
            let description = T.pack . fromShortText $ PackageDescription.description packageDescription
            body <-
                runIOorExplode $ do
                    doc1 <- readHaddock def description
                    let doc2 = headerShift 1 doc1
                    writeMarkdown def{writerExtensions = githubMarkdownExtensions} doc2
            let readme = header <> body
            TIO.writeFile "README.md" readme
