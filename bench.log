Build profile: -w ghc-9.2.8 -O1
In order, the following will be built (use -v for more details):
 - lsm-tree-0.1.0.0 (bench:lsm-tree-micro-bench) (file bench/micro/Bench/Database/LSMTree/Internal/Integration.hs changed)
Preprocessing benchmark 'lsm-tree-micro-bench' for lsm-tree-0.1.0.0..
Building benchmark 'lsm-tree-micro-bench' for lsm-tree-0.1.0.0..
Linking .../lsm-tree/dist-newstyle/build/x86_64-linux/ghc-9.2.8/lsm-tree-0.1.0.0/b/lsm-tree-micro-bench/build/lsm-tree-micro-bench/lsm-tree-micro-bench ...
benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default, 50000 actual pages/Bloomfilter query
time                 1.772 ms   (1.764 ms .. 1.780 ms)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 1.781 ms   (1.775 ms .. 1.794 ms)
std dev              29.71 μs   (20.34 μs .. 48.03 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default, 50000 actual pages/Compact index search
time                 966.0 μs   (963.3 μs .. 968.1 μs)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 972.6 μs   (968.4 μs .. 987.7 μs)
std dev              24.60 μs   (5.015 μs .. 51.73 μs)
variance introduced by outliers: 15% (moderately inflated)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default, 50000 actual pages/In-memory lookup
time                 3.294 ms   (3.271 ms .. 3.325 ms)
                     0.999 R²   (0.998 R² .. 1.000 R²)
mean                 3.333 ms   (3.312 ms .. 3.364 ms)
std dev              84.70 μs   (63.29 μs .. 113.6 μs)
variance introduced by outliers: 12% (moderately inflated)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default onlyPos, 50000 actual pages/Bloomfilter query
time                 910.8 μs   (907.6 μs .. 913.9 μs)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 915.5 μs   (912.5 μs .. 923.3 μs)
std dev              14.09 μs   (8.232 μs .. 23.81 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default onlyPos, 50000 actual pages/Compact index search
time                 887.3 μs   (882.4 μs .. 893.0 μs)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 887.5 μs   (886.3 μs .. 889.5 μs)
std dev              5.199 μs   (3.436 μs .. 8.120 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default onlyPos, 50000 actual pages/In-memory lookup
time                 2.139 ms   (2.130 ms .. 2.151 ms)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 2.152 ms   (2.145 ms .. 2.164 ms)
std dev              30.27 μs   (19.46 μs .. 44.87 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default onlyNeg, 50000 actual pages/Bloomfilter query
time                 678.4 μs   (676.3 μs .. 680.3 μs)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 682.0 μs   (680.4 μs .. 686.3 μs)
std dev              8.342 μs   (3.458 μs .. 14.67 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default onlyNeg, 50000 actual pages/Compact index search
time                 9.573 μs   (9.553 μs .. 9.594 μs)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 9.586 μs   (9.568 μs .. 9.606 μs)
std dev              60.76 ns   (50.37 ns .. 79.06 ns)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default onlyNeg, 50000 actual pages/In-memory lookup
time                 868.3 μs   (865.3 μs .. 870.9 μs)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 877.1 μs   (871.9 μs .. 889.3 μs)
std dev              25.65 μs   (13.46 μs .. 47.16 μs)
variance introduced by outliers: 19% (moderately inflated)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default high fpr, 50000 actual pages/Bloomfilter query
time                 1.155 ms   (1.153 ms .. 1.156 ms)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 1.159 ms   (1.157 ms .. 1.162 ms)
std dev              8.353 μs   (4.618 μs .. 14.66 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default high fpr, 50000 actual pages/Compact index search
time                 1.652 ms   (1.648 ms .. 1.656 ms)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 1.649 ms   (1.647 ms .. 1.651 ms)
std dev              7.741 μs   (6.492 μs .. 9.788 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default high fpr, 50000 actual pages/In-memory lookup
time                 3.417 ms   (3.402 ms .. 3.428 ms)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 3.428 ms   (3.423 ms .. 3.437 ms)
std dev              20.21 μs   (12.59 μs .. 33.23 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default small, 10000 actual pages/Bloomfilter query
time                 160.2 μs   (159.9 μs .. 160.6 μs)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 160.7 μs   (160.4 μs .. 161.5 μs)
std dev              1.457 μs   (737.6 ns .. 2.635 μs)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default small, 10000 actual pages/Compact index search
time                 65.89 μs   (65.73 μs .. 66.10 μs)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 66.17 μs   (65.94 μs .. 66.80 μs)
std dev              1.132 μs   (362.6 ns .. 2.097 μs)
variance introduced by outliers: 12% (moderately inflated)

benchmarking Bench.Database.LSMTree.Internal.Integration/prepLookups for a single run/default small, 10000 actual pages/In-memory lookup
time                 282.3 μs   (281.9 μs .. 282.8 μs)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 282.9 μs   (282.6 μs .. 283.4 μs)
std dev              1.355 μs   (872.8 ns .. 2.073 μs)

